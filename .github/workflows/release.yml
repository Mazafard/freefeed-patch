name: Release Patch
on:
  push:
    branches: [ master ]
  workflow_dispatch:
jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_HUB_TOKEN}}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: true
  linuxamd64build:
    name: build patch amd64 version
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
      - name: build linux amd64 version
        run: |
          CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -o patch-release -v main.go
          mkdir patch
          cp patch-release patch/patch-release
          cp patch.service patch/patch.service
          cp patch.sh patch/patch.sh
          cd patch
          mv patch-release patch

      - name: package
        run: tar -zcvf patch-linux-amd64.tar.gz patch
      - name: upload
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_HUB_TOKEN}}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: patch-linux-amd64.tar.gz
          asset_name: patch-linux-amd64.tar.gz
          asset_content_type: application/gzip
  DarwinArm64build:
    name: build patch Darwin Arm64 version
    needs: release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
      - name: build darwin Arm64 version
        run: |
          CGO_ENABLED=1 GOOS=darwin GOARCH=arm64 go build -o patch-release -v main.go
          mkdir patch
          cp patch-release patch/patch-release
          cp patch.service patch/patch.service
          cp patch.sh patch/patch.sh
          cd patch
          mv patch-release patch

      - name: package
        run: tar -zcvf patch-darwin-arm64.tar.gz patch
      - name: upload
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_HUB_TOKEN}}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: patch-darwin-arm64.tar.gz
          asset_name: patch-darwin-arm64.tar.gz
          asset_content_type: application/gzip
